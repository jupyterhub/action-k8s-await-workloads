#!/bin/bash

# Purpose:
# - To chart agnostically await relevant workloads in a namespace.
#

# Prepare format for printf
# A bold colored topic with a divider with two colors depending on normal output or error related output.
#
# NOTE: We need to reapply formatting after each \n within a GitHub Workflow.
#
green=32
red=31
divider='--------------------------------------------------------------------------------'
strong_divider='================================================================================'
export f_h1_ok="\n\033[${green};1m%s\n\033[${green};1m${strong_divider}\033[0m\n"
export f_h2_ok="\n\033[${green};1m%s\n\033[${green};1m${divider}\033[0m\n"
export f_h3_ok="\n\033[${green};1m%s\033[0m\n"
export f_h2_err="\n\033[${red};1m%s\n\033[${red};1m${divider}\033[0m\n"
export f_h3_err="\n\033[${red};1m%s\033[0m\n"

printf "$f_h1_ok" "# Await workloads"

# Provide a resource overview
#
printf "\n\n"
printf "$f_h2_ok" "## Workload overview"
printf "$f_h3_ok" "### \$ kubectl get daemonset,deployment,statefulset"
kubectl get ds,deploy,sts

# Await workloads in sequence
#
printf "$f_h2_ok" "## Await workloads"
WORKFLOWS=$(kubectl get deploy,sts,ds -o name)
for var in $WORKFLOWS; do
    printf "$f_h3_err" "### \$ kubectl describe pod/$var"
    kubectl rollout status $var
done
